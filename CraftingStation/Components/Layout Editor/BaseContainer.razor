@using CraftingStation.Components.Layout_Editor.Data
<EditorComponent Style="@StylesString" ComponentData="Container">
    @* @if (this.container == null) {
        return;
    }
 *@

    @if (this.Container != null) {
        @foreach (ComponentData component in this.Container.Children) {
            <DynamicComponent @key="component.ID" @ref="component.DynamicComponent" Type="component.Type" Parameters="component.Parameters" />

        }
    }

</EditorComponent>

@code {

    [Parameter]
    public ContainerData Container { get; set; }

    [CascadingParameter]
    public EditorData EditorData { get; set; }

    // private ContainerData container => this.Container as ContainerData;

    protected Dictionary<string, string> Styles = new Dictionary<string, string>();

    protected void AddOrUpdateKey(string key, string value) {
        if (this.Styles.ContainsKey(key)) {
            this.Styles[key] = value;
        } else {
            this.Styles.Add(key, value);
        }
    }

    protected void UpdateParam(string name, object value) {
        if (Container == null) {
            return;
        }

        Container.AddOrUpdateParameter(name, value);
    }

    protected void Refresh() {
        StateHasChanged();
    }

    protected string StylesString {
        get {
            string result = "";

            foreach (KeyValuePair<string, string> keyValuePair in Styles) {
                result += keyValuePair.Key + ": " + keyValuePair.Value + ";";
            }

            return result;
        }
    }
}